/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema;


import java.util.Arrays;
import java.util.List;

import open.tresorier.generated.jooq.test.DefaultCatalog;
import open.tresorier.generated.jooq.test.information_schema.tables.CheckConstraints;
import open.tresorier.generated.jooq.test.information_schema.tables.Collations;
import open.tresorier.generated.jooq.test.information_schema.tables.ColumnPrivileges;
import open.tresorier.generated.jooq.test.information_schema.tables.Columns;
import open.tresorier.generated.jooq.test.information_schema.tables.Constants;
import open.tresorier.generated.jooq.test.information_schema.tables.ConstraintColumnUsage;
import open.tresorier.generated.jooq.test.information_schema.tables.DomainConstraints;
import open.tresorier.generated.jooq.test.information_schema.tables.Domains;
import open.tresorier.generated.jooq.test.information_schema.tables.ElementTypes;
import open.tresorier.generated.jooq.test.information_schema.tables.EnumValues;
import open.tresorier.generated.jooq.test.information_schema.tables.Fields;
import open.tresorier.generated.jooq.test.information_schema.tables.InDoubt;
import open.tresorier.generated.jooq.test.information_schema.tables.IndexColumns;
import open.tresorier.generated.jooq.test.information_schema.tables.Indexes;
import open.tresorier.generated.jooq.test.information_schema.tables.InformationSchemaCatalogName;
import open.tresorier.generated.jooq.test.information_schema.tables.KeyColumnUsage;
import open.tresorier.generated.jooq.test.information_schema.tables.Locks;
import open.tresorier.generated.jooq.test.information_schema.tables.Parameters;
import open.tresorier.generated.jooq.test.information_schema.tables.QueryStatistics;
import open.tresorier.generated.jooq.test.information_schema.tables.ReferentialConstraints;
import open.tresorier.generated.jooq.test.information_schema.tables.Rights;
import open.tresorier.generated.jooq.test.information_schema.tables.Roles;
import open.tresorier.generated.jooq.test.information_schema.tables.Routines;
import open.tresorier.generated.jooq.test.information_schema.tables.Schemata;
import open.tresorier.generated.jooq.test.information_schema.tables.Sequences;
import open.tresorier.generated.jooq.test.information_schema.tables.SessionState;
import open.tresorier.generated.jooq.test.information_schema.tables.Sessions;
import open.tresorier.generated.jooq.test.information_schema.tables.Settings;
import open.tresorier.generated.jooq.test.information_schema.tables.Synonyms;
import open.tresorier.generated.jooq.test.information_schema.tables.TableConstraints;
import open.tresorier.generated.jooq.test.information_schema.tables.TablePrivileges;
import open.tresorier.generated.jooq.test.information_schema.tables.Tables;
import open.tresorier.generated.jooq.test.information_schema.tables.Triggers;
import open.tresorier.generated.jooq.test.information_schema.tables.Users;
import open.tresorier.generated.jooq.test.information_schema.tables.Views;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InformationSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>INFORMATION_SCHEMA</code>
     */
    public static final InformationSchema INFORMATION_SCHEMA = new InformationSchema();

    /**
     * The table <code>INFORMATION_SCHEMA.CHECK_CONSTRAINTS</code>.
     */
    public final CheckConstraints CHECK_CONSTRAINTS = CheckConstraints.CHECK_CONSTRAINTS;

    /**
     * The table <code>INFORMATION_SCHEMA.COLLATIONS</code>.
     */
    public final Collations COLLATIONS = Collations.COLLATIONS;

    /**
     * The table <code>INFORMATION_SCHEMA.COLUMN_PRIVILEGES</code>.
     */
    public final ColumnPrivileges COLUMN_PRIVILEGES = ColumnPrivileges.COLUMN_PRIVILEGES;

    /**
     * The table <code>INFORMATION_SCHEMA.COLUMNS</code>.
     */
    public final Columns COLUMNS = Columns.COLUMNS;

    /**
     * The table <code>INFORMATION_SCHEMA.CONSTANTS</code>.
     */
    public final Constants CONSTANTS = Constants.CONSTANTS;

    /**
     * The table <code>INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE</code>.
     */
    public final ConstraintColumnUsage CONSTRAINT_COLUMN_USAGE = ConstraintColumnUsage.CONSTRAINT_COLUMN_USAGE;

    /**
     * The table <code>INFORMATION_SCHEMA.DOMAIN_CONSTRAINTS</code>.
     */
    public final DomainConstraints DOMAIN_CONSTRAINTS = DomainConstraints.DOMAIN_CONSTRAINTS;

    /**
     * The table <code>INFORMATION_SCHEMA.DOMAINS</code>.
     */
    public final Domains DOMAINS = Domains.DOMAINS;

    /**
     * The table <code>INFORMATION_SCHEMA.ELEMENT_TYPES</code>.
     */
    public final ElementTypes ELEMENT_TYPES = ElementTypes.ELEMENT_TYPES;

    /**
     * The table <code>INFORMATION_SCHEMA.ENUM_VALUES</code>.
     */
    public final EnumValues ENUM_VALUES = EnumValues.ENUM_VALUES;

    /**
     * The table <code>INFORMATION_SCHEMA.FIELDS</code>.
     */
    public final Fields FIELDS = Fields.FIELDS;

    /**
     * The table <code>INFORMATION_SCHEMA.IN_DOUBT</code>.
     */
    public final InDoubt IN_DOUBT = InDoubt.IN_DOUBT;

    /**
     * The table <code>INFORMATION_SCHEMA.INDEX_COLUMNS</code>.
     */
    public final IndexColumns INDEX_COLUMNS = IndexColumns.INDEX_COLUMNS;

    /**
     * The table <code>INFORMATION_SCHEMA.INDEXES</code>.
     */
    public final Indexes INDEXES = Indexes.INDEXES;

    /**
     * The table
     * <code>INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME</code>.
     */
    public final InformationSchemaCatalogName INFORMATION_SCHEMA_CATALOG_NAME = InformationSchemaCatalogName.INFORMATION_SCHEMA_CATALOG_NAME;

    /**
     * The table <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE</code>.
     */
    public final KeyColumnUsage KEY_COLUMN_USAGE = KeyColumnUsage.KEY_COLUMN_USAGE;

    /**
     * The table <code>INFORMATION_SCHEMA.LOCKS</code>.
     */
    public final Locks LOCKS = Locks.LOCKS;

    /**
     * The table <code>INFORMATION_SCHEMA.PARAMETERS</code>.
     */
    public final Parameters PARAMETERS = Parameters.PARAMETERS;

    /**
     * The table <code>INFORMATION_SCHEMA.QUERY_STATISTICS</code>.
     */
    public final QueryStatistics QUERY_STATISTICS = QueryStatistics.QUERY_STATISTICS;

    /**
     * The table <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS</code>.
     */
    public final ReferentialConstraints REFERENTIAL_CONSTRAINTS = ReferentialConstraints.REFERENTIAL_CONSTRAINTS;

    /**
     * The table <code>INFORMATION_SCHEMA.RIGHTS</code>.
     */
    public final Rights RIGHTS = Rights.RIGHTS;

    /**
     * The table <code>INFORMATION_SCHEMA.ROLES</code>.
     */
    public final Roles ROLES = Roles.ROLES;

    /**
     * The table <code>INFORMATION_SCHEMA.ROUTINES</code>.
     */
    public final Routines ROUTINES = Routines.ROUTINES;

    /**
     * The table <code>INFORMATION_SCHEMA.SCHEMATA</code>.
     */
    public final Schemata SCHEMATA = Schemata.SCHEMATA;

    /**
     * The table <code>INFORMATION_SCHEMA.SEQUENCES</code>.
     */
    public final Sequences SEQUENCES = Sequences.SEQUENCES;

    /**
     * The table <code>INFORMATION_SCHEMA.SESSION_STATE</code>.
     */
    public final SessionState SESSION_STATE = SessionState.SESSION_STATE;

    /**
     * The table <code>INFORMATION_SCHEMA.SESSIONS</code>.
     */
    public final Sessions SESSIONS = Sessions.SESSIONS;

    /**
     * The table <code>INFORMATION_SCHEMA.SETTINGS</code>.
     */
    public final Settings SETTINGS = Settings.SETTINGS;

    /**
     * The table <code>INFORMATION_SCHEMA.SYNONYMS</code>.
     */
    public final Synonyms SYNONYMS = Synonyms.SYNONYMS;

    /**
     * The table <code>INFORMATION_SCHEMA.TABLE_CONSTRAINTS</code>.
     */
    public final TableConstraints TABLE_CONSTRAINTS = TableConstraints.TABLE_CONSTRAINTS;

    /**
     * The table <code>INFORMATION_SCHEMA.TABLE_PRIVILEGES</code>.
     */
    public final TablePrivileges TABLE_PRIVILEGES = TablePrivileges.TABLE_PRIVILEGES;

    /**
     * The table <code>INFORMATION_SCHEMA.TABLES</code>.
     */
    public final Tables TABLES = Tables.TABLES;

    /**
     * The table <code>INFORMATION_SCHEMA.TRIGGERS</code>.
     */
    public final Triggers TRIGGERS = Triggers.TRIGGERS;

    /**
     * The table <code>INFORMATION_SCHEMA.USERS</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>INFORMATION_SCHEMA.VIEWS</code>.
     */
    public final Views VIEWS = Views.VIEWS;

    /**
     * No further instances allowed
     */
    private InformationSchema() {
        super("INFORMATION_SCHEMA", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            CheckConstraints.CHECK_CONSTRAINTS,
            Collations.COLLATIONS,
            ColumnPrivileges.COLUMN_PRIVILEGES,
            Columns.COLUMNS,
            Constants.CONSTANTS,
            ConstraintColumnUsage.CONSTRAINT_COLUMN_USAGE,
            DomainConstraints.DOMAIN_CONSTRAINTS,
            Domains.DOMAINS,
            ElementTypes.ELEMENT_TYPES,
            EnumValues.ENUM_VALUES,
            Fields.FIELDS,
            InDoubt.IN_DOUBT,
            IndexColumns.INDEX_COLUMNS,
            Indexes.INDEXES,
            InformationSchemaCatalogName.INFORMATION_SCHEMA_CATALOG_NAME,
            KeyColumnUsage.KEY_COLUMN_USAGE,
            Locks.LOCKS,
            Parameters.PARAMETERS,
            QueryStatistics.QUERY_STATISTICS,
            ReferentialConstraints.REFERENTIAL_CONSTRAINTS,
            Rights.RIGHTS,
            Roles.ROLES,
            Routines.ROUTINES,
            Schemata.SCHEMATA,
            Sequences.SEQUENCES,
            SessionState.SESSION_STATE,
            Sessions.SESSIONS,
            Settings.SETTINGS,
            Synonyms.SYNONYMS,
            TableConstraints.TABLE_CONSTRAINTS,
            TablePrivileges.TABLE_PRIVILEGES,
            Tables.TABLES,
            Triggers.TRIGGERS,
            Users.USERS,
            Views.VIEWS
        );
    }
}
