/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.Sequences;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SequencesRecord extends TableRecordImpl<SequencesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG</code>.
     */
    public SequencesRecord setSequenceCatalog(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG</code>.
     */
    public String getSequenceCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA</code>.
     */
    public SequencesRecord setSequenceSchema(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA</code>.
     */
    public String getSequenceSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME</code>.
     */
    public SequencesRecord setSequenceName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME</code>.
     */
    public String getSequenceName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.DATA_TYPE</code>.
     */
    public SequencesRecord setDataType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.DATA_TYPE</code>.
     */
    public String getDataType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION</code>.
     */
    public SequencesRecord setNumericPrecision(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION</code>.
     */
    public Integer getNumericPrecision() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION_RADIX</code>.
     */
    public SequencesRecord setNumericPrecisionRadix(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION_RADIX</code>.
     */
    public Integer getNumericPrecisionRadix() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_SCALE</code>.
     */
    public SequencesRecord setNumericScale(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.NUMERIC_SCALE</code>.
     */
    public Integer getNumericScale() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.START_VALUE</code>.
     */
    public SequencesRecord setStartValue(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.START_VALUE</code>.
     */
    public Long getStartValue() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.MINIMUM_VALUE</code>.
     */
    public SequencesRecord setMinimumValue(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.MINIMUM_VALUE</code>.
     */
    public Long getMinimumValue() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.MAXIMUM_VALUE</code>.
     */
    public SequencesRecord setMaximumValue(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.MAXIMUM_VALUE</code>.
     */
    public Long getMaximumValue() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.INCREMENT</code>.
     */
    public SequencesRecord setIncrement(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.INCREMENT</code>.
     */
    public Long getIncrement() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.CYCLE_OPTION</code>.
     */
    public SequencesRecord setCycleOption(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.CYCLE_OPTION</code>.
     */
    public String getCycleOption() {
        return (String) get(11);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_DATA_TYPE</code>.
     */
    public SequencesRecord setDeclaredDataType(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_DATA_TYPE</code>.
     */
    public String getDeclaredDataType() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_PRECISION</code>.
     */
    public SequencesRecord setDeclaredNumericPrecision(Integer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_PRECISION</code>.
     */
    public Integer getDeclaredNumericPrecision() {
        return (Integer) get(13);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_SCALE</code>.
     */
    public SequencesRecord setDeclaredNumericScale(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_SCALE</code>.
     */
    public Integer getDeclaredNumericScale() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.BASE_VALUE</code>.
     */
    public SequencesRecord setBaseValue(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.BASE_VALUE</code>.
     */
    public Long getBaseValue() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.CACHE</code>.
     */
    public SequencesRecord setCache(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.CACHE</code>.
     */
    public Long getCache() {
        return (Long) get(16);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SEQUENCES.REMARKS</code>.
     */
    public SequencesRecord setRemarks(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SEQUENCES.REMARKS</code>.
     */
    public String getRemarks() {
        return (String) get(17);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SequencesRecord
     */
    public SequencesRecord() {
        super(Sequences.SEQUENCES);
    }

    /**
     * Create a detached, initialised SequencesRecord
     */
    public SequencesRecord(String sequenceCatalog, String sequenceSchema, String sequenceName, String dataType, Integer numericPrecision, Integer numericPrecisionRadix, Integer numericScale, Long startValue, Long minimumValue, Long maximumValue, Long increment, String cycleOption, String declaredDataType, Integer declaredNumericPrecision, Integer declaredNumericScale, Long baseValue, Long cache, String remarks) {
        super(Sequences.SEQUENCES);

        setSequenceCatalog(sequenceCatalog);
        setSequenceSchema(sequenceSchema);
        setSequenceName(sequenceName);
        setDataType(dataType);
        setNumericPrecision(numericPrecision);
        setNumericPrecisionRadix(numericPrecisionRadix);
        setNumericScale(numericScale);
        setStartValue(startValue);
        setMinimumValue(minimumValue);
        setMaximumValue(maximumValue);
        setIncrement(increment);
        setCycleOption(cycleOption);
        setDeclaredDataType(declaredDataType);
        setDeclaredNumericPrecision(declaredNumericPrecision);
        setDeclaredNumericScale(declaredNumericScale);
        setBaseValue(baseValue);
        setCache(cache);
        setRemarks(remarks);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SequencesRecord
     */
    public SequencesRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.Sequences value) {
        super(Sequences.SEQUENCES);

        if (value != null) {
            setSequenceCatalog(value.getSequenceCatalog());
            setSequenceSchema(value.getSequenceSchema());
            setSequenceName(value.getSequenceName());
            setDataType(value.getDataType());
            setNumericPrecision(value.getNumericPrecision());
            setNumericPrecisionRadix(value.getNumericPrecisionRadix());
            setNumericScale(value.getNumericScale());
            setStartValue(value.getStartValue());
            setMinimumValue(value.getMinimumValue());
            setMaximumValue(value.getMaximumValue());
            setIncrement(value.getIncrement());
            setCycleOption(value.getCycleOption());
            setDeclaredDataType(value.getDeclaredDataType());
            setDeclaredNumericPrecision(value.getDeclaredNumericPrecision());
            setDeclaredNumericScale(value.getDeclaredNumericScale());
            setBaseValue(value.getBaseValue());
            setCache(value.getCache());
            setRemarks(value.getRemarks());
            resetChangedOnNotNull();
        }
    }
}
