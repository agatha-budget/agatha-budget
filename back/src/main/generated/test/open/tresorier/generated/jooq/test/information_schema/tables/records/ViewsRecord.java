/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.Views;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewsRecord extends TableRecordImpl<ViewsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_CATALOG</code>.
     */
    public ViewsRecord setTableCatalog(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_CATALOG</code>.
     */
    public String getTableCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_SCHEMA</code>.
     */
    public ViewsRecord setTableSchema(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_SCHEMA</code>.
     */
    public String getTableSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_NAME</code>.
     */
    public ViewsRecord setTableName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.VIEW_DEFINITION</code>.
     */
    public ViewsRecord setViewDefinition(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.VIEW_DEFINITION</code>.
     */
    public String getViewDefinition() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.CHECK_OPTION</code>.
     */
    public ViewsRecord setCheckOption(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.CHECK_OPTION</code>.
     */
    public String getCheckOption() {
        return (String) get(4);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.IS_UPDATABLE</code>.
     */
    public ViewsRecord setIsUpdatable(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.IS_UPDATABLE</code>.
     */
    public String getIsUpdatable() {
        return (String) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.INSERTABLE_INTO</code>.
     */
    public ViewsRecord setInsertableInto(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.INSERTABLE_INTO</code>.
     */
    public String getInsertableInto() {
        return (String) get(6);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_UPDATABLE</code>.
     */
    public ViewsRecord setIsTriggerUpdatable(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_UPDATABLE</code>.
     */
    public String getIsTriggerUpdatable() {
        return (String) get(7);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_DELETABLE</code>.
     */
    public ViewsRecord setIsTriggerDeletable(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_DELETABLE</code>.
     */
    public String getIsTriggerDeletable() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_INSERTABLE_INTO</code>.
     */
    public ViewsRecord setIsTriggerInsertableInto(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_INSERTABLE_INTO</code>.
     */
    public String getIsTriggerInsertableInto() {
        return (String) get(9);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.STATUS</code>.
     */
    public ViewsRecord setStatus(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(10);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.VIEWS.REMARKS</code>.
     */
    public ViewsRecord setRemarks(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.VIEWS.REMARKS</code>.
     */
    public String getRemarks() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewsRecord
     */
    public ViewsRecord() {
        super(Views.VIEWS);
    }

    /**
     * Create a detached, initialised ViewsRecord
     */
    public ViewsRecord(String tableCatalog, String tableSchema, String tableName, String viewDefinition, String checkOption, String isUpdatable, String insertableInto, String isTriggerUpdatable, String isTriggerDeletable, String isTriggerInsertableInto, String status, String remarks) {
        super(Views.VIEWS);

        setTableCatalog(tableCatalog);
        setTableSchema(tableSchema);
        setTableName(tableName);
        setViewDefinition(viewDefinition);
        setCheckOption(checkOption);
        setIsUpdatable(isUpdatable);
        setInsertableInto(insertableInto);
        setIsTriggerUpdatable(isTriggerUpdatable);
        setIsTriggerDeletable(isTriggerDeletable);
        setIsTriggerInsertableInto(isTriggerInsertableInto);
        setStatus(status);
        setRemarks(remarks);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ViewsRecord
     */
    public ViewsRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.Views value) {
        super(Views.VIEWS);

        if (value != null) {
            setTableCatalog(value.getTableCatalog());
            setTableSchema(value.getTableSchema());
            setTableName(value.getTableName());
            setViewDefinition(value.getViewDefinition());
            setCheckOption(value.getCheckOption());
            setIsUpdatable(value.getIsUpdatable());
            setInsertableInto(value.getInsertableInto());
            setIsTriggerUpdatable(value.getIsTriggerUpdatable());
            setIsTriggerDeletable(value.getIsTriggerDeletable());
            setIsTriggerInsertableInto(value.getIsTriggerInsertableInto());
            setStatus(value.getStatus());
            setRemarks(value.getRemarks());
            resetChangedOnNotNull();
        }
    }
}
