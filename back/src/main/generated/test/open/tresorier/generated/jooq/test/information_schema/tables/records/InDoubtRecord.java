/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.InDoubt;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InDoubtRecord extends TableRecordImpl<InDoubtRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.IN_DOUBT.TRANSACTION_NAME</code>.
     */
    public InDoubtRecord setTransactionName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.IN_DOUBT.TRANSACTION_NAME</code>.
     */
    public String getTransactionName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.IN_DOUBT.TRANSACTION_STATE</code>.
     */
    public InDoubtRecord setTransactionState(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.IN_DOUBT.TRANSACTION_STATE</code>.
     */
    public String getTransactionState() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InDoubtRecord
     */
    public InDoubtRecord() {
        super(InDoubt.IN_DOUBT);
    }

    /**
     * Create a detached, initialised InDoubtRecord
     */
    public InDoubtRecord(String transactionName, String transactionState) {
        super(InDoubt.IN_DOUBT);

        setTransactionName(transactionName);
        setTransactionState(transactionState);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InDoubtRecord
     */
    public InDoubtRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.InDoubt value) {
        super(InDoubt.IN_DOUBT);

        if (value != null) {
            setTransactionName(value.getTransactionName());
            setTransactionState(value.getTransactionState());
            resetChangedOnNotNull();
        }
    }
}
