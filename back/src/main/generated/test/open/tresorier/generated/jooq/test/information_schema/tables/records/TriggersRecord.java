/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.Triggers;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TriggersRecord extends TableRecordImpl<TriggersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_CATALOG</code>.
     */
    public TriggersRecord setTriggerCatalog(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_CATALOG</code>.
     */
    public String getTriggerCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_SCHEMA</code>.
     */
    public TriggersRecord setTriggerSchema(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_SCHEMA</code>.
     */
    public String getTriggerSchema() {
        return (String) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_NAME</code>.
     */
    public TriggersRecord setTriggerName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.TRIGGER_NAME</code>.
     */
    public String getTriggerName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_MANIPULATION</code>.
     */
    public TriggersRecord setEventManipulation(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_MANIPULATION</code>.
     */
    public String getEventManipulation() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_CATALOG</code>.
     */
    public TriggersRecord setEventObjectCatalog(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_CATALOG</code>.
     */
    public String getEventObjectCatalog() {
        return (String) get(4);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_SCHEMA</code>.
     */
    public TriggersRecord setEventObjectSchema(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_SCHEMA</code>.
     */
    public String getEventObjectSchema() {
        return (String) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_TABLE</code>.
     */
    public TriggersRecord setEventObjectTable(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.EVENT_OBJECT_TABLE</code>.
     */
    public String getEventObjectTable() {
        return (String) get(6);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.ACTION_ORIENTATION</code>.
     */
    public TriggersRecord setActionOrientation(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.ACTION_ORIENTATION</code>.
     */
    public String getActionOrientation() {
        return (String) get(7);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.ACTION_TIMING</code>.
     */
    public TriggersRecord setActionTiming(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.ACTION_TIMING</code>.
     */
    public String getActionTiming() {
        return (String) get(8);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.IS_ROLLBACK</code>.
     */
    public TriggersRecord setIsRollback(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.IS_ROLLBACK</code>.
     */
    public Boolean getIsRollback() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.JAVA_CLASS</code>.
     */
    public TriggersRecord setJavaClass(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.JAVA_CLASS</code>.
     */
    public String getJavaClass() {
        return (String) get(10);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.QUEUE_SIZE</code>.
     */
    public TriggersRecord setQueueSize(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.QUEUE_SIZE</code>.
     */
    public Integer getQueueSize() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.NO_WAIT</code>.
     */
    public TriggersRecord setNoWait(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.NO_WAIT</code>.
     */
    public Boolean getNoWait() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.TRIGGERS.REMARKS</code>.
     */
    public TriggersRecord setRemarks(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.TRIGGERS.REMARKS</code>.
     */
    public String getRemarks() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TriggersRecord
     */
    public TriggersRecord() {
        super(Triggers.TRIGGERS);
    }

    /**
     * Create a detached, initialised TriggersRecord
     */
    public TriggersRecord(String triggerCatalog, String triggerSchema, String triggerName, String eventManipulation, String eventObjectCatalog, String eventObjectSchema, String eventObjectTable, String actionOrientation, String actionTiming, Boolean isRollback, String javaClass, Integer queueSize, Boolean noWait, String remarks) {
        super(Triggers.TRIGGERS);

        setTriggerCatalog(triggerCatalog);
        setTriggerSchema(triggerSchema);
        setTriggerName(triggerName);
        setEventManipulation(eventManipulation);
        setEventObjectCatalog(eventObjectCatalog);
        setEventObjectSchema(eventObjectSchema);
        setEventObjectTable(eventObjectTable);
        setActionOrientation(actionOrientation);
        setActionTiming(actionTiming);
        setIsRollback(isRollback);
        setJavaClass(javaClass);
        setQueueSize(queueSize);
        setNoWait(noWait);
        setRemarks(remarks);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TriggersRecord
     */
    public TriggersRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.Triggers value) {
        super(Triggers.TRIGGERS);

        if (value != null) {
            setTriggerCatalog(value.getTriggerCatalog());
            setTriggerSchema(value.getTriggerSchema());
            setTriggerName(value.getTriggerName());
            setEventManipulation(value.getEventManipulation());
            setEventObjectCatalog(value.getEventObjectCatalog());
            setEventObjectSchema(value.getEventObjectSchema());
            setEventObjectTable(value.getEventObjectTable());
            setActionOrientation(value.getActionOrientation());
            setActionTiming(value.getActionTiming());
            setIsRollback(value.getIsRollback());
            setJavaClass(value.getJavaClass());
            setQueueSize(value.getQueueSize());
            setNoWait(value.getNoWait());
            setRemarks(value.getRemarks());
            resetChangedOnNotNull();
        }
    }
}
