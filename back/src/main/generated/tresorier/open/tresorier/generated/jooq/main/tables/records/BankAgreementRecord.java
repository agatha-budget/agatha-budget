/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.main.tables.records;


import open.tresorier.generated.jooq.main.tables.BankAgreement;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BankAgreementRecord extends UpdatableRecordImpl<BankAgreementRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bank_agreement.id</code>.
     */
    public BankAgreementRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.bank_agreement.budget_id</code>.
     */
    public BankAgreementRecord setBudgetId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.budget_id</code>.
     */
    public String getBudgetId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.bank_agreement.bank_id</code>.
     */
    public BankAgreementRecord setBankId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.bank_id</code>.
     */
    public String getBankId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.bank_agreement.timestamp</code>.
     */
    public BankAgreementRecord setTimestamp(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.bank_agreement.nordigen_requisition_id</code>.
     */
    public BankAgreementRecord setNordigenRequisitionId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.nordigen_requisition_id</code>.
     */
    public String getNordigenRequisitionId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.bank_agreement.archived</code>.
     */
    public BankAgreementRecord setArchived(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.archived</code>.
     */
    public Boolean getArchived() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.bank_agreement.deleted</code>.
     */
    public BankAgreementRecord setDeleted(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.bank_agreement.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankAgreementRecord
     */
    public BankAgreementRecord() {
        super(BankAgreement.BANK_AGREEMENT);
    }

    /**
     * Create a detached, initialised BankAgreementRecord
     */
    public BankAgreementRecord(String id, String budgetId, String bankId, Long timestamp, String nordigenRequisitionId, Boolean archived, Boolean deleted) {
        super(BankAgreement.BANK_AGREEMENT);

        setId(id);
        setBudgetId(budgetId);
        setBankId(bankId);
        setTimestamp(timestamp);
        setNordigenRequisitionId(nordigenRequisitionId);
        setArchived(archived);
        setDeleted(deleted);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BankAgreementRecord
     */
    public BankAgreementRecord(open.tresorier.generated.jooq.main.tables.pojos.BankAgreement value) {
        super(BankAgreement.BANK_AGREEMENT);

        if (value != null) {
            setId(value.getId());
            setBudgetId(value.getBudgetId());
            setBankId(value.getBankId());
            setTimestamp(value.getTimestamp());
            setNordigenRequisitionId(value.getNordigenRequisitionId());
            setArchived(value.getArchived());
            setDeleted(value.getDeleted());
            resetChangedOnNotNull();
        }
    }
}
