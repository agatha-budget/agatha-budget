/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.main.tables.daos;


import java.util.List;

import open.tresorier.generated.jooq.main.tables.CategoryIdentifier;
import open.tresorier.generated.jooq.main.tables.records.CategoryIdentifierRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryIdentifierDao extends DAOImpl<CategoryIdentifierRecord, open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier, String> {

    /**
     * Create a new CategoryIdentifierDao without any configuration
     */
    public CategoryIdentifierDao() {
        super(CategoryIdentifier.CATEGORY_IDENTIFIER, open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier.class);
    }

    /**
     * Create a new CategoryIdentifierDao with an attached configuration
     */
    public CategoryIdentifierDao(Configuration configuration) {
        super(CategoryIdentifier.CATEGORY_IDENTIFIER, open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier.class, configuration);
    }

    @Override
    public String getId(open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(CategoryIdentifier.CATEGORY_IDENTIFIER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchById(String... values) {
        return fetch(CategoryIdentifier.CATEGORY_IDENTIFIER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier fetchOneById(String value) {
        return fetchOne(CategoryIdentifier.CATEGORY_IDENTIFIER.ID, value);
    }

    /**
     * Fetch records that have <code>budget_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchRangeOfBudgetId(String lowerInclusive, String upperInclusive) {
        return fetchRange(CategoryIdentifier.CATEGORY_IDENTIFIER.BUDGET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>budget_id IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchByBudgetId(String... values) {
        return fetch(CategoryIdentifier.CATEGORY_IDENTIFIER.BUDGET_ID, values);
    }

    /**
     * Fetch records that have <code>pattern BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchRangeOfPattern(String lowerInclusive, String upperInclusive) {
        return fetchRange(CategoryIdentifier.CATEGORY_IDENTIFIER.PATTERN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pattern IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchByPattern(String... values) {
        return fetch(CategoryIdentifier.CATEGORY_IDENTIFIER.PATTERN, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchRangeOfCategoryId(String lowerInclusive, String upperInclusive) {
        return fetchRange(CategoryIdentifier.CATEGORY_IDENTIFIER.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.main.tables.pojos.CategoryIdentifier> fetchByCategoryId(String... values) {
        return fetch(CategoryIdentifier.CATEGORY_IDENTIFIER.CATEGORY_ID, values);
    }
}
