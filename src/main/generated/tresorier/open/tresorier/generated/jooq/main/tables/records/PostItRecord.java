/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.main.tables.records;


import open.tresorier.generated.jooq.main.tables.PostIt;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostItRecord extends UpdatableRecordImpl<PostItRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = -211269661;

    /**
     * Setter for <code>public.post_it.budget_id</code>.
     */
    public PostItRecord setBudgetId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.post_it.budget_id</code>.
     */
    public String getBudgetId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.post_it.month</code>.
     */
    public PostItRecord setMonth(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.post_it.month</code>.
     */
    public Integer getMonth() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.post_it.text</code>.
     */
    public PostItRecord setText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.post_it.text</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PostIt.POST_IT.BUDGET_ID;
    }

    @Override
    public Field<Integer> field2() {
        return PostIt.POST_IT.MONTH;
    }

    @Override
    public Field<String> field3() {
        return PostIt.POST_IT.TEXT;
    }

    @Override
    public String component1() {
        return getBudgetId();
    }

    @Override
    public Integer component2() {
        return getMonth();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public String value1() {
        return getBudgetId();
    }

    @Override
    public Integer value2() {
        return getMonth();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public PostItRecord value1(String value) {
        setBudgetId(value);
        return this;
    }

    @Override
    public PostItRecord value2(Integer value) {
        setMonth(value);
        return this;
    }

    @Override
    public PostItRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public PostItRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostItRecord
     */
    public PostItRecord() {
        super(PostIt.POST_IT);
    }

    /**
     * Create a detached, initialised PostItRecord
     */
    public PostItRecord(String budgetId, Integer month, String text) {
        super(PostIt.POST_IT);

        set(0, budgetId);
        set(1, month);
        set(2, text);
    }
}
