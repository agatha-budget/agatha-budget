/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.main.tables;


import java.util.Arrays;
import java.util.List;

import open.tresorier.generated.jooq.main.Keys;
import open.tresorier.generated.jooq.main.Public;
import open.tresorier.generated.jooq.main.tables.records.BudgetRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Budget extends TableImpl<BudgetRecord> {

    private static final long serialVersionUID = 1392357347;

    /**
     * The reference instance of <code>public.budget</code>
     */
    public static final Budget BUDGET = new Budget();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BudgetRecord> getRecordType() {
        return BudgetRecord.class;
    }

    /**
     * The column <code>public.budget.id</code>.
     */
    public final TableField<BudgetRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.budget.person_id</code>.
     */
    public final TableField<BudgetRecord, String> PERSON_ID = createField(DSL.name("person_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.budget.name</code>.
     */
    public final TableField<BudgetRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.budget.deleted</code>.
     */
    public final TableField<BudgetRecord, Boolean> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.budget.profile</code>.
     */
    public final TableField<BudgetRecord, String> PROFILE = createField(DSL.name("profile"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false).defaultValue(org.jooq.impl.DSL.field("'PROFILE_USER'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>public.budget</code> table reference
     */
    public Budget() {
        this(DSL.name("budget"), null);
    }

    /**
     * Create an aliased <code>public.budget</code> table reference
     */
    public Budget(String alias) {
        this(DSL.name(alias), BUDGET);
    }

    /**
     * Create an aliased <code>public.budget</code> table reference
     */
    public Budget(Name alias) {
        this(alias, BUDGET);
    }

    private Budget(Name alias, Table<BudgetRecord> aliased) {
        this(alias, aliased, null);
    }

    private Budget(Name alias, Table<BudgetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Budget(Table<O> child, ForeignKey<O, BudgetRecord> key) {
        super(child, key, BUDGET);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<BudgetRecord> getPrimaryKey() {
        return Keys.BUDGET_PKEY;
    }

    @Override
    public List<UniqueKey<BudgetRecord>> getKeys() {
        return Arrays.<UniqueKey<BudgetRecord>>asList(Keys.BUDGET_PKEY);
    }

    @Override
    public List<ForeignKey<BudgetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BudgetRecord, ?>>asList(Keys.BUDGET__BUDGET_PERSON_ID_FKEY);
    }

    public Person person() {
        return new Person(this, Keys.BUDGET__BUDGET_PERSON_ID_FKEY);
    }

    @Override
    public Budget as(String alias) {
        return new Budget(DSL.name(alias), this);
    }

    @Override
    public Budget as(Name alias) {
        return new Budget(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Budget rename(String name) {
        return new Budget(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Budget rename(Name name) {
        return new Budget(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Boolean, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
