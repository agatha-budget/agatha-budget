/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.tables.daos;


import java.util.List;

import open.tresorier.generated.jooq.tables.Category;
import open.tresorier.generated.jooq.tables.records.CategoryRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryDao extends DAOImpl<CategoryRecord, open.tresorier.generated.jooq.tables.pojos.Category, String> {

    /**
     * Create a new CategoryDao without any configuration
     */
    public CategoryDao() {
        super(Category.CATEGORY, open.tresorier.generated.jooq.tables.pojos.Category.class);
    }

    /**
     * Create a new CategoryDao with an attached configuration
     */
    public CategoryDao(Configuration configuration) {
        super(Category.CATEGORY, open.tresorier.generated.jooq.tables.pojos.Category.class, configuration);
    }

    @Override
    public String getId(open.tresorier.generated.jooq.tables.pojos.Category object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchById(String... values) {
        return fetch(Category.CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public open.tresorier.generated.jooq.tables.pojos.Category fetchOneById(String value) {
        return fetchOne(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>budget_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchRangeOfBudgetId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.BUDGET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>budget_id IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchByBudgetId(String... values) {
        return fetch(Category.CATEGORY.BUDGET_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchByName(String... values) {
        return fetch(Category.CATEGORY.NAME, values);
    }

    /**
     * Fetch records that have <code>archived BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchRangeOfArchived(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Category.CATEGORY.ARCHIVED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>archived IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchByArchived(Boolean... values) {
        return fetch(Category.CATEGORY.ARCHIVED, values);
    }

    /**
     * Fetch records that have <code>deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchRangeOfDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Category.CATEGORY.DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.tables.pojos.Category> fetchByDeleted(Boolean... values) {
        return fetch(Category.CATEGORY.DELETED, values);
    }
}
