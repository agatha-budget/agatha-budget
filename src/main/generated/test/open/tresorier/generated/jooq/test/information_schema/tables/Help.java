/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables;


import open.tresorier.generated.jooq.test.information_schema.InformationSchema;
import open.tresorier.generated.jooq.test.information_schema.tables.records.HelpRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Help extends TableImpl<HelpRecord> {

    private static final long serialVersionUID = -245121680;

    /**
     * The reference instance of <code>INFORMATION_SCHEMA.HELP</code>
     */
    public static final Help HELP = new Help();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HelpRecord> getRecordType() {
        return HelpRecord.class;
    }

    /**
     * The column <code>INFORMATION_SCHEMA.HELP.ID</code>.
     */
    public final TableField<HelpRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>INFORMATION_SCHEMA.HELP.SECTION</code>.
     */
    public final TableField<HelpRecord, String> SECTION = createField(DSL.name("SECTION"), org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>INFORMATION_SCHEMA.HELP.TOPIC</code>.
     */
    public final TableField<HelpRecord, String> TOPIC = createField(DSL.name("TOPIC"), org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>INFORMATION_SCHEMA.HELP.SYNTAX</code>.
     */
    public final TableField<HelpRecord, String> SYNTAX = createField(DSL.name("SYNTAX"), org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>INFORMATION_SCHEMA.HELP.TEXT</code>.
     */
    public final TableField<HelpRecord, String> TEXT = createField(DSL.name("TEXT"), org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * Create a <code>INFORMATION_SCHEMA.HELP</code> table reference
     */
    public Help() {
        this(DSL.name("HELP"), null);
    }

    /**
     * Create an aliased <code>INFORMATION_SCHEMA.HELP</code> table reference
     */
    public Help(String alias) {
        this(DSL.name(alias), HELP);
    }

    /**
     * Create an aliased <code>INFORMATION_SCHEMA.HELP</code> table reference
     */
    public Help(Name alias) {
        this(alias, HELP);
    }

    private Help(Name alias, Table<HelpRecord> aliased) {
        this(alias, aliased, null);
    }

    private Help(Name alias, Table<HelpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Help(Table<O> child, ForeignKey<O, HelpRecord> key) {
        super(child, key, HELP);
    }

    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    public Help as(String alias) {
        return new Help(DSL.name(alias), this);
    }

    @Override
    public Help as(Name alias) {
        return new Help(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Help rename(String name) {
        return new Help(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Help rename(Name name) {
        return new Help(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
