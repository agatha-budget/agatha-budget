/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.KeyColumnUsage;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyColumnUsageRecord extends TableRecordImpl<KeyColumnUsageRecord> implements Record9<String, String, String, String, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG</code>.
     */
    public KeyColumnUsageRecord setConstraintCatalog(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG</code>.
     */
    public String getConstraintCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA</code>.
     */
    public KeyColumnUsageRecord setConstraintSchema(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA</code>.
     */
    public String getConstraintSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME</code>.
     */
    public KeyColumnUsageRecord setConstraintName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME</code>.
     */
    public String getConstraintName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_CATALOG</code>.
     */
    public KeyColumnUsageRecord setTableCatalog(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_CATALOG</code>.
     */
    public String getTableCatalog() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_SCHEMA</code>.
     */
    public KeyColumnUsageRecord setTableSchema(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_SCHEMA</code>.
     */
    public String getTableSchema() {
        return (String) get(4);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME</code>.
     */
    public KeyColumnUsageRecord setTableName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME</code>.
     */
    public String getTableName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.COLUMN_NAME</code>.
     */
    public KeyColumnUsageRecord setColumnName(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.COLUMN_NAME</code>.
     */
    public String getColumnName() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.ORDINAL_POSITION</code>.
     */
    public KeyColumnUsageRecord setOrdinalPosition(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.ORDINAL_POSITION</code>.
     */
    public Integer getOrdinalPosition() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT</code>.
     */
    public KeyColumnUsageRecord setPositionInUniqueConstraint(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT</code>.
     */
    public Integer getPositionInUniqueConstraint() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, String, String, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, String, String, String, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG;
    }

    @Override
    public Field<String> field2() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA;
    }

    @Override
    public Field<String> field3() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.CONSTRAINT_NAME;
    }

    @Override
    public Field<String> field4() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.TABLE_CATALOG;
    }

    @Override
    public Field<String> field5() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.TABLE_SCHEMA;
    }

    @Override
    public Field<String> field6() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.TABLE_NAME;
    }

    @Override
    public Field<String> field7() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.COLUMN_NAME;
    }

    @Override
    public Field<Integer> field8() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.ORDINAL_POSITION;
    }

    @Override
    public Field<Integer> field9() {
        return KeyColumnUsage.KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT;
    }

    @Override
    public String component1() {
        return getConstraintCatalog();
    }

    @Override
    public String component2() {
        return getConstraintSchema();
    }

    @Override
    public String component3() {
        return getConstraintName();
    }

    @Override
    public String component4() {
        return getTableCatalog();
    }

    @Override
    public String component5() {
        return getTableSchema();
    }

    @Override
    public String component6() {
        return getTableName();
    }

    @Override
    public String component7() {
        return getColumnName();
    }

    @Override
    public Integer component8() {
        return getOrdinalPosition();
    }

    @Override
    public Integer component9() {
        return getPositionInUniqueConstraint();
    }

    @Override
    public String value1() {
        return getConstraintCatalog();
    }

    @Override
    public String value2() {
        return getConstraintSchema();
    }

    @Override
    public String value3() {
        return getConstraintName();
    }

    @Override
    public String value4() {
        return getTableCatalog();
    }

    @Override
    public String value5() {
        return getTableSchema();
    }

    @Override
    public String value6() {
        return getTableName();
    }

    @Override
    public String value7() {
        return getColumnName();
    }

    @Override
    public Integer value8() {
        return getOrdinalPosition();
    }

    @Override
    public Integer value9() {
        return getPositionInUniqueConstraint();
    }

    @Override
    public KeyColumnUsageRecord value1(String value) {
        setConstraintCatalog(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value2(String value) {
        setConstraintSchema(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value3(String value) {
        setConstraintName(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value4(String value) {
        setTableCatalog(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value5(String value) {
        setTableSchema(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value6(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value7(String value) {
        setColumnName(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value8(Integer value) {
        setOrdinalPosition(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord value9(Integer value) {
        setPositionInUniqueConstraint(value);
        return this;
    }

    @Override
    public KeyColumnUsageRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KeyColumnUsageRecord
     */
    public KeyColumnUsageRecord() {
        super(KeyColumnUsage.KEY_COLUMN_USAGE);
    }

    /**
     * Create a detached, initialised KeyColumnUsageRecord
     */
    public KeyColumnUsageRecord(String constraintCatalog, String constraintSchema, String constraintName, String tableCatalog, String tableSchema, String tableName, String columnName, Integer ordinalPosition, Integer positionInUniqueConstraint) {
        super(KeyColumnUsage.KEY_COLUMN_USAGE);

        setConstraintCatalog(constraintCatalog);
        setConstraintSchema(constraintSchema);
        setConstraintName(constraintName);
        setTableCatalog(tableCatalog);
        setTableSchema(tableSchema);
        setTableName(tableName);
        setColumnName(columnName);
        setOrdinalPosition(ordinalPosition);
        setPositionInUniqueConstraint(positionInUniqueConstraint);
    }

    /**
     * Create a detached, initialised KeyColumnUsageRecord
     */
    public KeyColumnUsageRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.KeyColumnUsage value) {
        super(KeyColumnUsage.KEY_COLUMN_USAGE);

        if (value != null) {
            setConstraintCatalog(value.getConstraintCatalog());
            setConstraintSchema(value.getConstraintSchema());
            setConstraintName(value.getConstraintName());
            setTableCatalog(value.getTableCatalog());
            setTableSchema(value.getTableSchema());
            setTableName(value.getTableName());
            setColumnName(value.getColumnName());
            setOrdinalPosition(value.getOrdinalPosition());
            setPositionInUniqueConstraint(value.getPositionInUniqueConstraint());
        }
    }
}
