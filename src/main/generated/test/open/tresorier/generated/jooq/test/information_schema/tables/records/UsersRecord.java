/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.Users;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends TableRecordImpl<UsersRecord> implements Record3<String, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.USERS.USER_NAME</code>.
     */
    public UsersRecord setUserName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.USERS.USER_NAME</code>.
     */
    public String getUserName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.USERS.IS_ADMIN</code>.
     */
    public UsersRecord setIsAdmin(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.USERS.IS_ADMIN</code>.
     */
    public Boolean getIsAdmin() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.USERS.REMARKS</code>.
     */
    public UsersRecord setRemarks(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.USERS.REMARKS</code>.
     */
    public String getRemarks() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Boolean, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Boolean, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.USER_NAME;
    }

    @Override
    public Field<Boolean> field2() {
        return Users.USERS.IS_ADMIN;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.REMARKS;
    }

    @Override
    public String component1() {
        return getUserName();
    }

    @Override
    public Boolean component2() {
        return getIsAdmin();
    }

    @Override
    public String component3() {
        return getRemarks();
    }

    @Override
    public String value1() {
        return getUserName();
    }

    @Override
    public Boolean value2() {
        return getIsAdmin();
    }

    @Override
    public String value3() {
        return getRemarks();
    }

    @Override
    public UsersRecord value1(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UsersRecord value2(Boolean value) {
        setIsAdmin(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setRemarks(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, Boolean value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String userName, Boolean isAdmin, String remarks) {
        super(Users.USERS);

        setUserName(userName);
        setIsAdmin(isAdmin);
        setRemarks(remarks);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setUserName(value.getUserName());
            setIsAdmin(value.getIsAdmin());
            setRemarks(value.getRemarks());
        }
    }
}
