/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.records;


import open.tresorier.generated.jooq.test.information_schema.tables.SessionState;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionStateRecord extends TableRecordImpl<SessionStateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INFORMATION_SCHEMA.SESSION_STATE.STATE_KEY</code>.
     */
    public SessionStateRecord setStateKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SESSION_STATE.STATE_KEY</code>.
     */
    public String getStateKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.SESSION_STATE.STATE_COMMAND</code>.
     */
    public SessionStateRecord setStateCommand(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SESSION_STATE.STATE_COMMAND</code>.
     */
    public String getStateCommand() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionStateRecord
     */
    public SessionStateRecord() {
        super(SessionState.SESSION_STATE);
    }

    /**
     * Create a detached, initialised SessionStateRecord
     */
    public SessionStateRecord(String stateKey, String stateCommand) {
        super(SessionState.SESSION_STATE);

        setStateKey(stateKey);
        setStateCommand(stateCommand);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SessionStateRecord
     */
    public SessionStateRecord(open.tresorier.generated.jooq.test.information_schema.tables.pojos.SessionState value) {
        super(SessionState.SESSION_STATE);

        if (value != null) {
            setStateKey(value.getStateKey());
            setStateCommand(value.getStateCommand());
            resetChangedOnNotNull();
        }
    }
}
