/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.public_.tables.records;


import java.math.BigDecimal;

import open.tresorier.generated.jooq.test.public_.tables.Allocation;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllocationRecord extends UpdatableRecordImpl<AllocationRecord> implements Record3<String, Integer, BigDecimal> {

    private static final long serialVersionUID = 145824659;

    /**
     * Setter for <code>PUBLIC.ALLOCATION.CATEGORY_ID</code>.
     */
    public AllocationRecord setCategoryId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ALLOCATION.CATEGORY_ID</code>.
     */
    public String getCategoryId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ALLOCATION.MONTH</code>.
     */
    public AllocationRecord setMonth(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ALLOCATION.MONTH</code>.
     */
    public Integer getMonth() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ALLOCATION.AMOUNT</code>.
     */
    public AllocationRecord setAmount(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ALLOCATION.AMOUNT</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Allocation.ALLOCATION.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Allocation.ALLOCATION.MONTH;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Allocation.ALLOCATION.AMOUNT;
    }

    @Override
    public String component1() {
        return getCategoryId();
    }

    @Override
    public Integer component2() {
        return getMonth();
    }

    @Override
    public BigDecimal component3() {
        return getAmount();
    }

    @Override
    public String value1() {
        return getCategoryId();
    }

    @Override
    public Integer value2() {
        return getMonth();
    }

    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    @Override
    public AllocationRecord value1(String value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public AllocationRecord value2(Integer value) {
        setMonth(value);
        return this;
    }

    @Override
    public AllocationRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public AllocationRecord values(String value1, Integer value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AllocationRecord
     */
    public AllocationRecord() {
        super(Allocation.ALLOCATION);
    }

    /**
     * Create a detached, initialised AllocationRecord
     */
    public AllocationRecord(String categoryId, Integer month, BigDecimal amount) {
        super(Allocation.ALLOCATION);

        set(0, categoryId);
        set(1, month);
        set(2, amount);
    }
}
