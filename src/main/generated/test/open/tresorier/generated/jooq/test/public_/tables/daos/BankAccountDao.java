/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.public_.tables.daos;


import java.util.List;

import open.tresorier.generated.jooq.test.public_.tables.BankAccount;
import open.tresorier.generated.jooq.test.public_.tables.records.BankAccountRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankAccountDao extends DAOImpl<BankAccountRecord, open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount, String> {

    /**
     * Create a new BankAccountDao without any configuration
     */
    public BankAccountDao() {
        super(BankAccount.BANK_ACCOUNT, open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount.class);
    }

    /**
     * Create a new BankAccountDao with an attached configuration
     */
    public BankAccountDao(Configuration configuration) {
        super(BankAccount.BANK_ACCOUNT, open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount.class, configuration);
    }

    @Override
    public String getId(open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(BankAccount.BANK_ACCOUNT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchById(String... values) {
        return fetch(BankAccount.BANK_ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount fetchOneById(String value) {
        return fetchOne(BankAccount.BANK_ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BankAccount.BANK_ACCOUNT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchByName(String... values) {
        return fetch(BankAccount.BANK_ACCOUNT.NAME, values);
    }

    /**
     * Fetch records that have <code>AGREEMENT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchRangeOfAgreementId(String lowerInclusive, String upperInclusive) {
        return fetchRange(BankAccount.BANK_ACCOUNT.AGREEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>AGREEMENT_ID IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchByAgreementId(String... values) {
        return fetch(BankAccount.BANK_ACCOUNT.AGREEMENT_ID, values);
    }

    /**
     * Fetch records that have <code>DELETED BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchRangeOfDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(BankAccount.BANK_ACCOUNT.DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DELETED IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.BankAccount> fetchByDeleted(Boolean... values) {
        return fetch(BankAccount.BANK_ACCOUNT.DELETED, values);
    }
}
