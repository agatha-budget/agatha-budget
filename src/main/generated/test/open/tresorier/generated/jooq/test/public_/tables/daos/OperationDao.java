/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.public_.tables.daos;


import java.math.BigDecimal;
import java.util.List;

import open.tresorier.generated.jooq.test.public_.tables.Operation;
import open.tresorier.generated.jooq.test.public_.tables.records.OperationRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperationDao extends DAOImpl<OperationRecord, open.tresorier.generated.jooq.test.public_.tables.pojos.Operation, String> {

    /**
     * Create a new OperationDao without any configuration
     */
    public OperationDao() {
        super(Operation.OPERATION, open.tresorier.generated.jooq.test.public_.tables.pojos.Operation.class);
    }

    /**
     * Create a new OperationDao with an attached configuration
     */
    public OperationDao(Configuration configuration) {
        super(Operation.OPERATION, open.tresorier.generated.jooq.test.public_.tables.pojos.Operation.class, configuration);
    }

    @Override
    public String getId(open.tresorier.generated.jooq.test.public_.tables.pojos.Operation object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Operation.OPERATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchById(String... values) {
        return fetch(Operation.OPERATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public open.tresorier.generated.jooq.test.public_.tables.pojos.Operation fetchOneById(String value) {
        return fetchOne(Operation.OPERATION.ID, value);
    }

    /**
     * Fetch records that have <code>OPERATION_DATE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfOperationDate(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Operation.OPERATION.OPERATION_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>OPERATION_DATE IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchByOperationDate(Long... values) {
        return fetch(Operation.OPERATION.OPERATION_DATE, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfAccountId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Operation.OPERATION.ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_ID IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchByAccountId(String... values) {
        return fetch(Operation.OPERATION.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>CATEGORY_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfCategoryId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Operation.OPERATION.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CATEGORY_ID IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchByCategoryId(String... values) {
        return fetch(Operation.OPERATION.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>AMOUNT BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Operation.OPERATION.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchByAmount(BigDecimal... values) {
        return fetch(Operation.OPERATION.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>MEMO BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchRangeOfMemo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Operation.OPERATION.MEMO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MEMO IN (values)</code>
     */
    public List<open.tresorier.generated.jooq.test.public_.tables.pojos.Operation> fetchByMemo(String... values) {
        return fetch(Operation.OPERATION.MEMO, values);
    }
}
