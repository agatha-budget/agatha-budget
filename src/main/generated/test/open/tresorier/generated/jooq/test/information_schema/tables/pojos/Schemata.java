/*
 * This file is generated by jOOQ.
 */
package open.tresorier.generated.jooq.test.information_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Schemata implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String catalogName;
    private final String schemaName;
    private final String schemaOwner;
    private final String defaultCharacterSetCatalog;
    private final String defaultCharacterSetSchema;
    private final String defaultCharacterSetName;
    private final String sqlPath;
    private final String defaultCollationName;
    private final String remarks;

    public Schemata(Schemata value) {
        this.catalogName = value.catalogName;
        this.schemaName = value.schemaName;
        this.schemaOwner = value.schemaOwner;
        this.defaultCharacterSetCatalog = value.defaultCharacterSetCatalog;
        this.defaultCharacterSetSchema = value.defaultCharacterSetSchema;
        this.defaultCharacterSetName = value.defaultCharacterSetName;
        this.sqlPath = value.sqlPath;
        this.defaultCollationName = value.defaultCollationName;
        this.remarks = value.remarks;
    }

    public Schemata(
        String catalogName,
        String schemaName,
        String schemaOwner,
        String defaultCharacterSetCatalog,
        String defaultCharacterSetSchema,
        String defaultCharacterSetName,
        String sqlPath,
        String defaultCollationName,
        String remarks
    ) {
        this.catalogName = catalogName;
        this.schemaName = schemaName;
        this.schemaOwner = schemaOwner;
        this.defaultCharacterSetCatalog = defaultCharacterSetCatalog;
        this.defaultCharacterSetSchema = defaultCharacterSetSchema;
        this.defaultCharacterSetName = defaultCharacterSetName;
        this.sqlPath = sqlPath;
        this.defaultCollationName = defaultCollationName;
        this.remarks = remarks;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SCHEMATA.CATALOG_NAME</code>.
     */
    public String getCatalogName() {
        return this.catalogName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SCHEMATA.SCHEMA_NAME</code>.
     */
    public String getSchemaName() {
        return this.schemaName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SCHEMATA.SCHEMA_OWNER</code>.
     */
    public String getSchemaOwner() {
        return this.schemaOwner;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_CATALOG</code>.
     */
    public String getDefaultCharacterSetCatalog() {
        return this.defaultCharacterSetCatalog;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_SCHEMA</code>.
     */
    public String getDefaultCharacterSetSchema() {
        return this.defaultCharacterSetSchema;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_NAME</code>.
     */
    public String getDefaultCharacterSetName() {
        return this.defaultCharacterSetName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SCHEMATA.SQL_PATH</code>.
     */
    public String getSqlPath() {
        return this.sqlPath;
    }

    /**
     * Getter for
     * <code>INFORMATION_SCHEMA.SCHEMATA.DEFAULT_COLLATION_NAME</code>.
     */
    public String getDefaultCollationName() {
        return this.defaultCollationName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.SCHEMATA.REMARKS</code>.
     */
    public String getRemarks() {
        return this.remarks;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Schemata (");

        sb.append(catalogName);
        sb.append(", ").append(schemaName);
        sb.append(", ").append(schemaOwner);
        sb.append(", ").append(defaultCharacterSetCatalog);
        sb.append(", ").append(defaultCharacterSetSchema);
        sb.append(", ").append(defaultCharacterSetName);
        sb.append(", ").append(sqlPath);
        sb.append(", ").append(defaultCollationName);
        sb.append(", ").append(remarks);

        sb.append(")");
        return sb.toString();
    }
}
