{
    "openapi": "3.0.3",
    "info": {
        "description": "Tr√©sorier api front to back",
        "version": "1.0.0",
        "title": "Tresorier",
        "termsOfService": "http://swagger.io/terms/",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost",
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/person": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Create a person",
                "operationId": "createPerson",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "the submitted user has been created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "an error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "the email is already registered"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/session": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Login",
                "operationId": "createSession",
                "parameters": [
                    {
                        "name": "login",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid password/login combination"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Person"
                ],
                "summary": "Logout",
                "operationId": "deleteSession",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "the submitted user has been created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "an error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "the email is already registered"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operation/account": {
            "get": {
                "tags": [
                    "Operations"
                ],
                "summary": "Finds operations by account",
                "operationId": "findOperationsByAccount",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "id of the account whose operations you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Operation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid account id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operation/category": {
            "get": {
                "tags": [
                    "Operations"
                ],
                "summary": "Finds operations by category",
                "operationId": "findOperationsByCategory",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "id of the category whose operations you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Operation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid category id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operation": {
            "post": {
                "tags": [
                    "Operations"
                ],
                "summary": "Add a new operation",
                "description": "",
                "operationId": "addOperation",
                "requestBody": {
                    "description": "operation to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnCreateOperation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "operation was successfully created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "inflow and outflow",
                                        "value": "inflow and outflow can both be specified"
                                    },
                                    "b": {
                                        "summary": "invalid account",
                                        "value": "invalid account id"
                                    },
                                    "c": {
                                        "summary": "invalid category",
                                        "value": "invalid category id"
                                    },
                                    "d": {
                                        "summary": "inconsistent account and category",
                                        "value": "specified account and category are not part from the same budget"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Operations"
                ],
                "summary": "Update an existing operation",
                "description": "",
                "operationId": "updateOperation",
                "requestBody": {
                    "description": "operation to edit",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "operation was successfully created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "inflow and outflow",
                                        "value": "inflow and outflow can both be specified"
                                    },
                                    "b": {
                                        "summary": "invalid account",
                                        "value": "invalid account id"
                                    },
                                    "c": {
                                        "summary": "invalid category",
                                        "value": "invalid category id"
                                    },
                                    "d": {
                                        "summary": "inconsistent account and category",
                                        "value": "specified account and category are not part of the same budget"
                                    },
                                    "e": {
                                        "summary": "invalid operation",
                                        "value": "invalid operation id"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Operations"
                ],
                "summary": "Delete operation",
                "operationId": "deleteOperation",
                "parameters": [
                    {
                        "name": "operation_id",
                        "in": "query",
                        "description": "id of the operation you want to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "operation was successfully deleted"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid operation id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Add a new category",
                "operationId": "addCategory",
                "requestBody": {
                    "description": "category to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnCreateCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "category was successfully created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "invalid budget id"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "updateCategory",
                "requestBody": {
                    "description": "category to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "category was successfully updated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "invalid category",
                                        "value": "invalid category id"
                                    },
                                    "b": {
                                        "summary": "invalid budget",
                                        "value": "invalid budget id"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "id of the category you want to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "category was successfully deleted"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid category id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/budget": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Finds categories by budget",
                "operationId": "findCategoriesByBudget",
                "parameters": [
                    {
                        "name": "budget_id",
                        "in": "query",
                        "description": "id of the budget whose categories you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid budget id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Add a new account",
                "operationId": "addAccount",
                "requestBody": {
                    "description": "account to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnCreateAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "account was successfully created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "invalid budget id"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update an account",
                "operationId": "updateAccount",
                "requestBody": {
                    "description": "account to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "account was successfully updated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "invalid account",
                                        "value": "invalid account id"
                                    },
                                    "b": {
                                        "summary": "invalid budget",
                                        "value": "invalid budget id"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "query",
                        "description": "id of the account you want to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "account was successfully deleted"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid account id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account/budget": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Finds accounts by budget",
                "operationId": "findAccountsByBudget",
                "parameters": [
                    {
                        "name": "budget_id",
                        "in": "query",
                        "description": "id of the budget whose accounts you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Account"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid budget id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/budget": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Add a new budget",
                "operationId": "addBudget",
                "requestBody": {
                    "description": "budget to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnCreateBudget"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "budget was successfully created"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "invalid user id"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Update a budget",
                "operationId": "updateBudget",
                "requestBody": {
                    "description": "budget to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Budget"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "budget was successfully updated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "invalid user",
                                        "value": "invalid user id"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Delete budget",
                "operationId": "deleteBudget",
                "parameters": [
                    {
                        "name": "budget_id",
                        "in": "query",
                        "description": "id of the budget you want to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "budget was successfully deleted"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid user id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/budget/user": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Finds budgets by user",
                "operationId": "findBudgetsByUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "id of the user whose budgets you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Budget"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid user id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monthly_budgets": {
            "get": {
                "tags": [
                    "Global view"
                ],
                "operationId": "getMonthlyBudgets",
                "parameters": [
                    {
                        "name": "budget_id",
                        "in": "query",
                        "description": "id of the budget whose monthly budgets data you want to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MonthlyBudget"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "invalid budget id"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/allocation": {
            "put": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Create or Update an allocation",
                "operationId": "setAllocation",
                "requestBody": {
                    "description": "allocation to set (create or update)",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Allocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "allocation was successfully sed"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "a": {
                                        "summary": "invalid category",
                                        "value": "invalid category id"
                                    },
                                    "b": {
                                        "summary": "invalid month value",
                                        "value": "invalid month value, the timestamp must refer to midnight on the first day of any month"
                                    },
                                    "c": {
                                        "summary": "inflow and outflow",
                                        "value": "inflow and outflow can both be specified"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Operation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnCreateOperation"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "OnCreateOperation": {
                "type": "object",
                "required": [
                    "date",
                    "account_id",
                    "category_id"
                ],
                "properties": {
                    "date": {
                        "type": "integer"
                    },
                    "account_id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "inflow": {
                        "type": "number"
                    },
                    "outflow": {
                        "type": "number"
                    },
                    "memo": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "operation"
                }
            },
            "Category": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnCreateCategory"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id",
                            "archived"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "archived": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "OnCreateCategory": {
                "type": "object",
                "required": [
                    "budget_id",
                    "name"
                ],
                "properties": {
                    "budget_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "category"
                }
            },
            "Account": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnCreateAccount"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id",
                            "archived"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "archived": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "OnCreateAccount": {
                "type": "object",
                "required": [
                    "budget_id",
                    "name"
                ],
                "properties": {
                    "budget_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "account"
                }
            },
            "Budget": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/OnCreateBudget"
                    },
                    {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ]
            },
            "OnCreateBudget": {
                "type": "object",
                "required": [
                    "user_id",
                    "name"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "budget"
                }
            },
            "Allocation": {
                "type": "object",
                "required": [
                    "category_id",
                    "allocation_month"
                ],
                "properties": {
                    "category_id": {
                        "type": "integer"
                    },
                    "allocation_month": {
                        "type": "integer"
                    },
                    "inflow": {
                        "type": "number"
                    },
                    "outflow": {
                        "type": "number"
                    }
                },
                "xml": {
                    "name": "allocation"
                }
            },
            "MonthlyBudget": {
                "type": "object",
                "properties": {
                    "month": {
                        "type": "integer"
                    },
                    "from_last_month": {
                        "type": "number"
                    },
                    "income": {
                        "type": "number"
                    },
                    "budgeted": {
                        "type": "number"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "category_id": {
                                    "type": "integer"
                                },
                                "allocated": {
                                    "type": "number"
                                },
                                "spent": {
                                    "type": "number"
                                },
                                "remaining": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "month_timestamp": {
                    "from_last_month": "number",
                    "income": "number",
                    "budgeted": "number",
                    "category_id": {
                        "allocation": "number",
                        "spent": "number",
                        "remaining": "number"
                    }
                }
            },
            "Person": {
                "type": "object",
                "required": [
                    "id",
                    "deleted",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "person"
                }
            },
            "Token": {
                "type": "object",
                "required": [
                    "handle",
                    "refresh"
                ],
                "properties": {
                    "handle": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "token"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Tresorier",
        "url": "http://tresorier.me"
    }
}
